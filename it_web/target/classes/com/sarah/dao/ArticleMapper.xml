<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sarah.dao.ArticleMapper" >
  <resultMap id="BaseResultMap" type="com.sarah.model.Article" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="auther" property="auther" jdbcType="VARCHAR" />
    <result column="createTime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="reading_quantity" property="readingQuantity" jdbcType="INTEGER" />
    <result column="categoryId" property="categoryid" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.sarah.model.Article" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, title, auther, createTime, reading_quantity, categoryId
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from article
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from article
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.sarah.model.Article" >
    insert into article (id, title, auther, 
      createTime, reading_quantity, categoryId, 
      content)
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{auther,jdbcType=VARCHAR}, 
      #{createtime,jdbcType=TIMESTAMP}, #{readingQuantity,jdbcType=INTEGER}, #{categoryid,jdbcType=INTEGER}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.sarah.model.Article" >
    insert into article
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="auther != null" >
        auther,
      </if>
      <if test="createtime != null" >
        createTime,
      </if>
      <if test="readingQuantity != null" >
        reading_quantity,
      </if>
      <if test="categoryid != null" >
        categoryId,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="auther != null" >
        #{auther,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="readingQuantity != null" >
        #{readingQuantity,jdbcType=INTEGER},
      </if>
      <if test="categoryid != null" >
        #{categoryid,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sarah.model.Article" >
    update article
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="auther != null" >
        auther = #{auther,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="readingQuantity != null" >
        reading_quantity = #{readingQuantity,jdbcType=INTEGER},
      </if>
      <if test="categoryid != null" >
        categoryId = #{categoryid,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR}
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.sarah.model.Article" >
    update article
    set title = #{title,jdbcType=VARCHAR},
      auther = #{auther,jdbcType=VARCHAR},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      reading_quantity = #{readingQuantity,jdbcType=INTEGER},
      categoryId = #{categoryid,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sarah.model.Article" >
    update article
    set title = #{title,jdbcType=VARCHAR},
      auther = #{auther,jdbcType=VARCHAR},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      reading_quantity = #{readingQuantity,jdbcType=INTEGER},
      categoryId = #{categoryid,jdbcType=INTEGER},
        content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
   <select id="selectAll" parameterType="com.sarah.model.Article" resultMap="BaseResultMap">
  	SELECT * FROM article WHERE 1=1
  	<if test="title != null" >
        and title = #{title,jdbcType=VARCHAR}
      </if>
      <if test="auther != null" >
       and  auther = #{auther,jdbcType=VARCHAR}
      </if>
      <if test="createtime != null" >
       and createTime = #{createtime,jdbcType=TIMESTAMP}
      </if>
      <if test="readingQuantity != null" >
       and reading_quantity = #{readingQuantity,jdbcType=INTEGER}
      </if>
      <if test="categoryid != null" >
       and categoryId = #{categoryid,jdbcType=INTEGER}
      </if>
      <if test="content != null" >
      and  content = #{content,jdbcType=LONGVARCHAR}
      </if>
  </select>
  <select id="seleteListSelective" resultMap="BaseResultMap">
  	SELECT * FROM article ORDER BY categoryId=#{id} limit #{index},#{rows}
  </select>
  <select id="seleteListByCategorySelective" resultMap="BaseResultMap">
  	SELECT * FROM article  where categoryId=#{id}  ORDER BY categoryId=#{id} limit #{index},#{rows}
  </select>
  <select id="selectRand" resultMap="BaseResultMap">
  	SELECT * FROM article  ORDER BY  RAND() LIMIT 10
  </select>
  <select id="selectHotArticle" resultMap="BaseResultMap">
  SELECT * FROM article ORDER BY reading_quantity DESC LIMIT 10
 </select>
 <select id="selectByMH" parameterType="com.sarah.model.Article" resultMap="BaseResultMap">
  	SELECT * FROM article WHERE 1=1
  	<if test="title != null" >
        and title LIKE concat( '%' , #{title}, '%' ) 
      </if>
       <if test="auther != null" >
       and  auther LIKE concat( '%' ,#{auther}, '%' ) 
      </if>
      <if test="createtime != null" >
       and createTime  LIKE concat( '%' , #{createtime}, '%' ) 
      </if>
      <if test="readingQuantity != null" >
       and reading_quantity  LIKE concat( '%' ,#{readingQuantity}, '%' ) 
      </if>
      <if test="categoryid != null" >
       and categoryId  LIKE concat( '%' , #{categoryid}, '%' ) 
      </if>
      <if test="content != null" >
      and  content  LIKE concat( '%' , #{content}, '%' ) 
      </if>
  </select>
  <select id="seleteList" parameterType="com.sarah.model.Article" resultMap="BaseResultMap">
  	SELECT * FROM article WHERE 1=1
  	<if test="title != null" >
        and title LIKE concat( '%' , #{title}, '%' ) 
      </if>
       <if test="auther != null" >
       and  auther LIKE concat( '%' ,#{auther}, '%' ) 
      </if>
      limit #{index},#{rows}
  </select>
</mapper>